generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGO_URI")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id                       String          @id @default(auto()) @map("_id") @db.ObjectId
  firstname                String
  lastname                 String
  phone                    String
  country                  String
  metamask                 String
  autotrade                String
  email                    String          @unique
  emailVerified            DateTime?
  image                    String?
  password                 String
  role                     UserRole        @default(USER)
  
  // New fields for admin approval
  approved                 Boolean         @default(false)
  whitelisted              Boolean?
  groupId                  String?
  allowedTradingAmountFrom Float?
  allowedTradingAmountTo   Float?
  adminFee                 Float?
  userProfit               Float?          @default(0)
  introducerFee            Float?

  accounts                 Account[]
  createdAt                DateTime        @default(now())
  updatedAt                DateTime        @updatedAt
}


model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String
  token   String  @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}


